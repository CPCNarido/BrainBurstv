{"Questions":{"1":"{\n  \u0022candidates\u0022: [\n    {\n      \u0022content\u0022: {\n        \u0022parts\u0022: [\n          {\n            \u0022text\u0022: \u0022**","2":"1:**\\n\\nWhat is the fundamental principle of Object-Oriented Programming that allows creating new classes based on existing ones, inheriting their attributes and methods?\\n\\n","3":"2:**\\n\\nWhich of the following best describes encapsulation in OOP?\\n\\n","4":"3:**\\n\\nWhat is polymorphism in OOP?\\n\\n","5":"4:**\\n\\nWhich access specifier in C\u002B\u002B allows a class member to be accessed only from within the same class?\\n\\n","6":"5:**\\n\\nWhat is an abstract class in OOP?\\n\\n","7":"6:**\\n\\nWhat is the purpose of a constructor in a class?\\n\\n","8":"7:**\\n\\nWhat is the difference between a class and an object?\\n\\n","9":"8:**\\n\\nWhich design principle emphasizes keeping classes focused and responsible for a single, well-defined task?\\n\\n","10":"9:**\\n\\nWhat is method overriding?\\n\\n","11":"10:**\\n\\nWhat is the purpose of a destructor in a class?\\n\\n"},"Choices":{"1":["No choice provided.","No choice provided.","No choice provided.","No choice provided."],"2":["\\na) Polymorphism\\nb) Encapsulation\\nc) Abstraction\\nd) Inheritance\\n\\n","No choice provided.","No choice provided.","No choice provided."],"3":["\\na)  The ability of an object to take on many forms.\\nb) Hiding internal data and methods of a class and providing controlled access through public interfaces.\\nc)  Representing complex real-world entities as simplified objects.\\nd)  The process of combining different functionalities into one unit.\\n\\n\\n","No choice provided.","No choice provided.","No choice provided."],"4":["\\na)  The ability to create new classes from existing ones.\\nb)  The process of hiding data from external access.\\nc)  The ability of an object to take on many forms or behave differently in different contexts.\\nd)  A way to represent abstract concepts in code.\\n\\n\\n","No choice provided.","No choice provided.","No choice provided."],"5":["\\na) public\\nb) protected\\nc) private\\nd) static\\n\\n","No choice provided.","No choice provided.","No choice provided."],"6":["\\na) A class that cannot be instantiated.\\nb) A class that has no methods.\\nc) A class that is only used for inheritance.\\nd) Both a) and c)\\n\\n","No choice provided.","No choice provided.","No choice provided."],"7":["\\na) To destroy an object.\\nb) To initialize the object\u0027s attributes.\\nc) To define the class\u0027s methods.\\nd) To inherit from another class.\\n\\n","No choice provided.","No choice provided.","No choice provided."],"8":["\\na) There is no difference; they are interchangeable terms.\\nb) A class is a blueprint for creating objects; an object is an instance of a class.\\nc) A class is an instance of an object; an object is a blueprint for creating classes.\\nd) Classes are used for data, objects are used for methods.\\n\\n","No choice provided.","No choice provided.","No choice provided."],"9":["\\na)  Open/Closed Principle\\nb)  Liskov Substitution Principle\\nc)  Interface Segregation Principle\\nd)  Single Responsibility Principle\\n\\n","No choice provided.","No choice provided.","No choice provided."],"10":["\\na)  Defining a method in a subclass that has the same name and parameters as a method in its superclass.\\nb)  Defining a method in a subclass that has a different name from a method in its superclass.\\nc)  Defining multiple methods with the same name but different parameters (method overloading).\\nd)  Hiding a method from the superclass in the subclass.\\n\\n","No choice provided.","No choice provided.","No choice provided."],"11":["\\na) To create an object.\\nb) To initialize an object\u0027s attributes.\\nc) To release resources held by an object when it is no longer needed.\\nd) To copy an object.\\n\\n","No choice provided.","No choice provided.","No choice provided."]}}