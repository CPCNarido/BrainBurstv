{"Questions":{"1":"1:**\n\nWhich of the following is NOT a fundamental principle of Object-Oriented Programming (OOP)?","2":"2:**\n\nWhat does the term \u0022encapsulation\u0022 refer to in OOP?","3":"3:**\n\nPolymorphism allows:","4":"4:**\n\nWhat is the purpose of an abstract class?","5":"5:**\n\nWhat is the difference between a class and an object?","6":"6:**\n\nWhich keyword is used to prevent method overriding in Java?","7":"7:**\n\nInheritance promotes which of the following OOP concepts?","8":"8:**\n\nWhat is constructor overloading?","9":"9:**\n\nWhat is the purpose of a destructor in C\u002B\u002B?","10":"10:**\n\nWhat is a design pattern in OOP?"},"Choices":{"1":["a) Encapsulation","b) Polymorphism","c) Sequential Processing","d) Inheritance"],"2":["a) The ability of a class to inherit properties and methods from another class.","b) The process of binding data and the methods that operate on that data within a single unit.","c) The ability of an object to take on many forms.","d) The technique of breaking down a program into smaller, reusable modules."],"3":["a)  Objects of different classes to respond to the same method call in their own specific way.","b)  A class to have only one constructor.","c)  Direct access to an object\u0027s internal data.","d)  The creation of multiple copies of the same object."],"4":["a) To create objects directly from it.","b) To serve as a blueprint for other classes, providing a common interface and potentially some default implementations.","c) To hide implementation details from the user.","d) To handle exceptions in a program."],"5":["a) There is no difference; they are interchangeable terms.","b) A class is a blueprint for creating objects; an object is an instance of a class.","c) A class is an instance of an object; an object is a blueprint for creating classes.","d) A class is a data structure; an object is a method."],"6":["a) \u0060static\u0060","b) \u0060final\u0060","c) \u0060private\u0060","d) \u0060abstract\u0060"],"7":["a) Encapsulation","b) Polymorphism","c) Code Reusability","d) Data Hiding"],"8":["a) Creating multiple constructors within a class that have different parameters.","b) Creating multiple classes with the same name.","c) Creating a constructor that calls another constructor within the same class.","d) Creating a constructor that takes no arguments."],"9":["a) To create an object.","b) To copy an object.","c) To release resources held by an object before it is destroyed.","d) To initialize an object."],"10":["a) A specific programming language.","b) A reusable solution to a commonly occurring problem within a specific context in software design.","c) A type of data structure.","d) A way to compile code."]}}