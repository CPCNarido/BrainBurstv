@{
    ViewData["Title"] = "Flashcard Maker Manual";
    Layout = "~/Views/Shared/_HomeLayout.cshtml";
}
<html>
<head>
    <link rel="stylesheet" href="~/css/Global/Header.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/Flash_Card_Maker_Manual.css" asp-append-version="true" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Rum+Raisin&display=swap" rel="stylesheet">
</head>
<body>
    <div class="container1">
        <!-- Main Form for Saving Flashcards -->
        <form id="flashcard-form" method="post" action="/FlashCards/SaveFlashcard" enctype="multipart/form-data">
            <div class="title">
                <div class="title-text">CREATE NEW FLASHCARDS!</div>
                <!-- Save and Practice Buttons -->
                <div class="header-button">
                    <button type="submit" class="button">
                        <img src="~/Assets/floppy 3.png" alt="Save Icon">
                        SAVE
                    </button>
                </div>
            </div>
            <!-- Flashcard Title and Description -->
            <div class="form-1">
                <input type="text" id="flashcardTitle" name="title" class="form-control1" placeholder="Enter flashcard title..." required />
            </div>
            <div class="form-2">
                <textarea id="flashcardDescription" name="description" class="form-control" rows="4" placeholder="Enter flashcard description..." required></textarea>
            </div>
            <hr style="height: 3px; background-color: black; border: none; margin-top: 50px; margin-bottom: 50px;" />
            <!-- Quiz Container -->
            <div id="quiz-container">
                <div class="quiz-box" data-index="1">
                    <div class="quiz-box-top">
                        <div class="question-number">
                            <div class="question-number-text">1</div>
                        </div>
                        <div class="text-designer">
                            <button type="button" class="text-designer-make-word-bold-button">
                                <img src="../Assets/bold 1.png" alt="Bold Icon">
                            </button>
                            <button type="button" class="text-designer-make-word-italic-button">
                                <img src="../Assets/FlashCardMakerManual/italic 1.png" alt="Italic Icon">
                            </button>
                            <button type="button" class="text-designer-make-word-underline-button">
                                <img src="../Assets/FlashCardMakerManual/underline 1.png" alt="Underline Icon">
                            </button>
                        </div>
                        <div class="question-arranger">
                            <button type="button" class="question-arranger-button-delete-question-button">
                                <img src="../Assets/FlashCardMakerManual/delete 3.png" alt="Delete Icon">
                            </button>
                        </div>
                    </div>
                    <hr style="height: 3px; background-color: black; border: none;"/>
                    <div class="quiz-box-bottom">
                        <div class="question-box">
                            <input type="text" name="questions[0].QuestionText" placeholder="Enter question here..." required />
                        </div>
                        <div class="answer-box">
                            <input type="text" name="questions[0].AnswerText" placeholder="Enter answer here..." required />
                        </div>
                        <div class="image-upload-answer">
                            <input type="file" id="image-upload-question-0" name="questions[0].ImageQuestionPath" accept="image/*" class="file-input" onchange="previewImage(event, 0, 'question')"/>
                            <button type="button" class="upload-button" onclick="triggerFileInput('image-upload-question-0')">
                                <img id="preview-question-0" src="../Assets/image insert 5.png" alt="Upload Icon" />
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="add-question-button">
                <button type="button" id="add-question-button">
                    <img src="~/Assets/FlashCardMakerManual/add symbol 2.png" alt="Add Icon">
                </button>
            </div>
        </form>
    </div>
    <script>
        const quizContainer = document.getElementById('quiz-container');
        const quizBoxes = document.querySelectorAll('.quiz-box');
        document.getElementById('add-question-button').addEventListener('click', function() {
            const newIndex = quizBoxes.length;

            const newQuizBox = document.createElement('div');
            newQuizBox.className = 'quiz-box';
            newQuizBox.setAttribute('data-index', newIndex + 1);
            newQuizBox.innerHTML = `
                <div class="quiz-box-top">
                    <div class="question-number">
                        <div class="question-number-text">${newIndex + 1}</div>
                    </div>
                    <div class="text-designer">
                        <button type="button" class="text-designer-make-word-bold-button">
                            <img src="../Assets/bold 1.png" alt="Bold Icon">
                        </button>
                        <button type="button" class="text-designer-make-word-italic-button">
                            <img src="../Assets/FlashCardMakerManual/italic 1.png" alt="Italic Icon">
                        </button>
                        <button type="button" class="text-designer-make-word-underline-button">
                            <img src="../Assets/FlashCardMakerManual/underline 1.png" alt="Underline Icon">
                        </button>
                    </div>
                    <div class="question-arranger">
                        <button type="button" class="question-arranger-button-delete-question-button">
                            <img src="../Assets/FlashCardMakerManual/delete 3.png" alt="Delete Icon">
                        </button>
                    </div>
                </div>
                <hr style="height: 3px; background-color: black; border: none;"/>
                <div class="quiz-box-bottom">
                    <div class="question-box">
                        <input type="text" name="questions[${newIndex}].QuestionText" placeholder="Enter question here..." required />
                    </div>
                    <div class="answer-box">
                        <input type="text" name="questions[${newIndex}].AnswerText" placeholder="Enter answer here..." required />
                    </div>
                    <div class="image-upload-answer">
                        <input type="file" id="image-upload-question-${newIndex}" name="questions[${newIndex}].ImageQuestionPath" accept="image/*" class="file-input" onchange="previewImage(event, ${newIndex}, 'question')"/>
                        <button type="button" class="upload-button" onclick="triggerFileInput('image-upload-question-${newIndex}')">
                            <img id="preview-question-${newIndex}" src="../Assets/image insert 5.png" alt="Upload Icon" />
                        </button>
                    </div>
                    <div class="image-upload-answer">
                        <input type="file" id="image-upload-answer-${newIndex}" name="questions[${newIndex}].ImageAnswerPath" accept="image/*" class="file-input" onchange="previewImage(event, ${newIndex}, 'answer')"/>
                        <button type="button" class="upload-button" onclick="triggerFileInput('image-upload-answer-${newIndex}')">
                            <img id="preview-answer-${newIndex}" src="../Assets/image insert 5.png" alt="Upload Icon" />
                        </button>
                    </div>
                </div>
            `;

            quizContainer.appendChild(newQuizBox);
        });

        function updateQuestionNumbers() {
            const quizBoxes = document.querySelectorAll('.quiz-box');
            quizBoxes.forEach((quizBox, index) => {
                const questionNumber = quizBox.querySelector('.question-number-text');
                questionNumber.textContent = index + 1;
                quizBox.dataset.index = index + 1; // Update the data index as well

                // Update the names and IDs of the inputs and buttons
                const questionInput = quizBox.querySelector('.question-box input');
                const answerInput = quizBox.querySelector('.answer-box input');

                questionInput.name = `questions[${index}].QuestionText`;
                answerInput.name = `questions[${index}].AnswerText`;
            });
        }

        // Handle Delete Question functionality
        document.addEventListener('click', (event) => {
            if (event.target.closest('.question-arranger-button-delete-question-button')) {
                const quizBox = event.target.closest('.quiz-box');
                quizBox.remove();
                updateQuestionNumbers();  // Recalculate and update question numbers after deletion
            }
        });

        function triggerFileInput(id) {
            document.getElementById(id).click();
        }

        function previewImage(event, index, type) {
            const input = event.target;
            const file = input.files[0];
            const reader = new FileReader();

            reader.onload = function(e) {
                const previewId = `preview-${type}-${index}`;
                const previewImg = document.getElementById(previewId);
                previewImg.src = e.target.result;
            };

            reader.readAsDataURL(file);
        }
    </script>
    <style>
        .uploaded-image {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
            border-radius: 10px;
        }
    </style>
</body>
</html>