@model List<Review>

@{
    ViewData["Title"] = "Homepage";
    Layout = "~/Views/Shared/_HomeLayout.cshtml";
}
<html>
    <head>
        <link rel="stylesheet" href="~/css/Header.css" asp-append-version="true" />
        <link rel="stylesheet" href="~/css/Index.css" asp-append-version="true" />
    </head>

    <body>
        <div class="hero-container">
            <div class="heroimage">
                <span class="Hero-text">Welcome to BrainBurst – Your<br> Ultimate Quiz and Flashcard<br> Maker!</span>
                <span class="Hero-text1">Elevate Your Educational Adventure:<br> Interactive Quizzes and Flashcards to Inspire<br>Your Mind!</span>
            @if (!User.Identity.IsAuthenticated)
            {
                <a href="@Url.Action("Register", "Account")" class="join">Sign Up</a>
            }else{
                <a href="@Url.Action("Join", "Home")" class="join">Join Quiz Now!!</a>
            }
            </div>
            <div class="b">
                <div class="con">
                    <h1>What can you do with <br>BrainBurst?</h1>
                    <img src="../Assets/Homepage/nagiisip.png" class="char">
                </div>
            </div>
            @if((string)@ViewData["Role"] == "Admin" || (string)@ViewData["Role"] == "Professor")
            {
            <div class="c1">
                <div class="right">
                    <div class="Right-content">
                        <span class="title">Quiz Creation & Participation</span>
                        <span class="description">Create custom quizzes or let AI<br> generate them instantly. Join <br>quizzes by code for easy,<br> interactive learning.</span>
                        <div class="button-container">
                            <button class="lets-go" onclick="location.href='@Url.Action("Quiz_Creation_Ai", "QuizCreation")'">Generate with A.I</button>
                            <button class="lets-go" onclick="location.href='@Url.Action("Quiz_Creation_Manual", "QuizCreation")'">Create Manually</button>
                        </div>

                    </div>
                </div>
                <div class="left1">
                    <div class="image2"> </div>
                </div>
            </div>
            <div class="ghost1">

            </div>
            }

            <div class="c">
                <div class="left">
                    <div class="image2"> </div>
                </div>

                <div class="right1">
                    <div class="Right-content2">
                        <span class="title2">Flashcard Creation</span>
                        <span class="description3">Create or let AI generate custom<br> flashcards tailored to your learning<br> needs for an effective study<br> experience.</span>
                        <div class="button-container">
                            <button class="lets-go2" onclick="location.href='@Url.Action("flash_card_maker_ai", "Flashcards")'">Generate with A.I</button>
                            <button class="lets-go2" onclick="location.href='@Url.Action("flash_card_maker_manual", "Flashcards")'">Create Manually</button>
                        </div>
                    </div>
                </div>
            </div>


            <div class="ghost1">

            </div>
            <div class="c3">
                <span class="title1">Anti Cheating Feature</span>
                <span class="description1">BrainBurst features advanced anti-cheating technology that monitors screen resolution to detect and prevent cheating. This ensures a fair and secure experience for all users.</span>
            </div>

            <div class="b">
                <div class="con">
                    <h1>What do they say about <br>us?</h1>
                    <img src="../Assets/Homepage/say.png" class="char1">
                </div>
            </div> <!-- Close the missing div tag here -->

            <div class="review-section-container">
                <div class="preview-left-container">
                    <button class="preview-left" onclick="moveLeft()" id="moveLeftButton">
                        <img src="../Assets/Homepage/preview-left.png" class="preview-left-logo">
                    </button>
                </div>
                
                <div class="middle-container">
                    <div class="review-wrapper">
                         @foreach (var review in Model)
                        {
                            <div class="review-container">
                                <img src="@review.FilePath" class="circle" width="107" height="99" style="border-radius: 50%;" viewBox="0 0 107 99" fill="none">
                                <div class="rectangle">
                                    <span>@review.UserName</span>
                                    <span>@review.UserRole</span>
                                </div>
                                <div class="stars">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        <svg class="star" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
                                            <path d="M10 0L12.4721 6.18034H19.0211L13.2745 9.99966L15.7466 16.18L10 12.3607L4.25342 16.18L6.72553 9.99966L0.978947 6.18034H7.52794L10 0Z" fill="@((i <= review.Rating) ? "#F5D059" : "#D3D3D3")"/>
                                        </svg>
                                    }
                                </div>
                                <div class="large-rectangle">
                                    <span>@review.Feedback</span>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <div class="preview-right-container">
                    <button class="preview-right" onclick="moveRight()" id="moveRightButton">
                        <img src="../Assets/Homepage/right.png" class="preview-left-logo">
                    </button>
                </div>
            </div>

            <div class="feedback-section">
                <button class="feedback-button" onclick="location.href='@Url.Action("Review", "Home")'">Leave a Feedback</button>
            </div>
        </div>

    </body>

    <script>
    let currentIndex = 0;

    function moveRight() {
        const reviewWrapper = document.querySelector('.review-wrapper');
        const reviewContainers = document.querySelectorAll('.review-container');
        const totalItems = reviewContainers.length;
        const visibleItems = 2;

        if (currentIndex < totalItems - visibleItems) {
            currentIndex += 1.1; // Move by one box
            if (currentIndex >= totalItems - visibleItems) {
                currentIndex = totalItems - visibleItems; // Ensure it doesn't go beyond the last set of boxes
                document.getElementById('moveRightButton').disabled = true; // Disable the move right button
            }
            document.getElementById('moveLeftButton').disabled = false; // Enable the move left button
            const offset = -currentIndex * 100; // Adjust offset to move by 100% for each box
            reviewWrapper.style.transform = `translateX(${offset}%)`;
        }
    }

    function moveLeft() {
        const reviewWrapper = document.querySelector('.review-wrapper');
        if (currentIndex > 0) {
            currentIndex -= 1.1; // Move by one box
            if (currentIndex <= 0) {
                currentIndex = 0; // Ensure it doesn't go before the first set of boxes
                document.getElementById('moveLeftButton').disabled = true; // Disable the move left button
            }
            document.getElementById('moveRightButton').disabled = false; // Enable the move right button
            const offset = -currentIndex * 100; // Adjust offset to move by 100% for each box
            reviewWrapper.style.transform = `translateX(${offset}%)`;
        }
    }

    // Center the initial box
    document.addEventListener('DOMContentLoaded', () => {
        const reviewWrapper = document.querySelector('.review-wrapper');
        const offset = -currentIndex * 100; // Adjust offset to center the initial box
        reviewWrapper.style.transform = `translateX(${offset}%)`;
        document.getElementById('moveLeftButton').disabled = true; // Initially disable the move left button

        // Disable the move right button if there are no more items to show
        const reviewContainers = document.querySelectorAll('.review-container');
        const totalItems = reviewContainers.length;
        const visibleItems = 2;
        if (totalItems <= visibleItems) {
            document.getElementById('moveRightButton').disabled = true;
        }
    });
</script>
</html>