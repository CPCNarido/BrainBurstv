@using UsersApp.ViewModels;
@model ChangePasswordViewModel;

@{
    ViewData["Title"] = "Change Password";
    Layout = "~/Views/Shared/_AccountLayout.cshtml";
}

<link rel="stylesheet" href="/css/Login.css" />

<div class="account-container">
    <div class="fill">
        <h2 class="text-center mb-4">Change Password</h2>
        <form asp-action="ChangePassword" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="userinput">
                <label asp-for="Email" class="form-label"></label>
                <input asp-for="Email" class="email-form" readonly/>
            </div>
            <div class="userinput">
                <label asp-for="NewPassword" class="form-label"></label>
                <input asp-for="NewPassword" class="email-form" />
                <span asp-validation-for="NewPassword" class="text-danger"></span>
            </div>
            <div class="userinput">
                <label asp-for="ConfirmNewPassword" class="form-label"></label>
                <input asp-for="ConfirmNewPassword" class="email-form" />
                <span asp-validation-for="ConfirmNewPassword" class="text-danger"></span>
            </div>
            <input type="submit" value="Submit" class="submit-button" />
            <div class="text-center mt-2">
                <a asp-controller="Account" asp-action="VerifyEmail" class="text-decoration-none mt-3">Back</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial.cshtml");
    }
}